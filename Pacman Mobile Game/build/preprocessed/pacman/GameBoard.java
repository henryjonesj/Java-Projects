package pacman;import javax.microedition.lcdui.*;import java.util.Vector;public class GameBoard{			public static final int ALIVE = 0;	public static final int DEAD = 1;		private Vector nodes_;		private Vector ghosts_;	private PacmanActor pacman_;      private int state_;		public GameBoard()	{		nodes_ = new Vector();		ghosts_ = new Vector();		state_ = ALIVE;	}		public void addGridNode(GridNode n)	{		nodes_.addElement(n);	}		public void paint(Graphics g)	{		for (int i=0; i<nodes_.size(); i++)		{			GridNode n = (GridNode) nodes_.elementAt(i);			n.paint(g);		}		pacman_.paint(g);		for (int i=0; i<ghosts_.size(); i++)		{			GhostActor ghost = (GhostActor) ghosts_.elementAt(i);			ghost.paint(g);						g.drawString(Integer.toString(pacman_.score_), 68, 65, 16|4);			g.drawString(Integer.toString(pacman_.getLivesLeft()), 58, 65, 16|4);		}	}		public boolean advanceFrame()	{				for (int i=0; i<ghosts_.size(); i++)		{			GhostActor ghost = (GhostActor) ghosts_.elementAt(i);						if ((Math.abs(ghost.getX() - pacman_.getX()) < 3) && (Math.abs(ghost.getY() - pacman_.getY()) < 3))			{				if(pacman_.isInvincible() == false)				{					state_ = DEAD;									}				else				{					pacman_.score_+=5;					ghost.restart();				}			}				ghost.advanceFrame();		}		if (state_ == DEAD)		{			pacman_.restart();			if (pacman_.getLivesLeft() < 0)				return false;			state_ = ALIVE;			for (int i=0; i<ghosts_.size(); i++)			{				GhostActor ghost = (GhostActor) ghosts_.elementAt(i);				ghost.restart();			}		}		else				pacman_.advanceFrame();				return true;	}	public void setPacman(PacmanActor p)	{		pacman_ = p;	}	public PacmanActor getPacman()	{		return pacman_;	}		public void addGhost(GhostActor ghost)	{		ghosts_.addElement(ghost);	}}